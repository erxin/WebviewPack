import java.time.LocalDateTime
import java.time.format.DateTimeFormatter
apply plugin: 'com.android.application'

android {

    compileSdk 33

    defaultConfig {
        applicationId "com.jbc.menu"
        minSdk 24
        targetSdk 33
        versionCode 105
        versionName "1.0.4.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        config {
            keyAlias 'compax'
            keyPassword 'compax'
            storeFile file('compax.keystore')
            storePassword 'compax'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    def currentDateString =  LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyyMMddHHmm"))
    project.ext {
        // JBCレジ
        serverPath = "/www/wwwroot/out/download/Menu"
        outputName = "JBCレジ-Menu-V${defaultConfig.versionName}-${currentDateString}-build-${defaultConfig.versionCode}.apk"
    }

    buildTypes {
        release {
            signingConfig signingConfigs.config
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.all {
//                    outputFileName = "JBCレジ-Menu vertical V${variant.versionName}.apk"
//                    outputFileName = "JBCレジ-Menu-V${variant.versionName}.apk"
//                    outputFileName = "JBCレジ-Menu-V${defaultConfig.versionName}-build-${defaultConfig.versionCode}.apk"
                    outputFileName = "${project.outputName}"
                }
            }
        }
        debug {
            signingConfig signingConfigs.config
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        def appBuildPath = "app/build/outputs/apk/release/${project.outputName}"
        def appServerPath = "root@34.143.202.57:${project.serverPath}"
        logger.quiet(appBuildPath)
        logger.quiet(appServerPath)
        task uploadApk(type: Exec) {
        //        泰国/www/wwwroot/restant/out/download
        //        日本/www/wwwroot/out/download/
            workingDir project.rootDir
            commandLine 'scp', "-i", "id_tiger_rsa", appBuildPath, appServerPath
        }

        // 在assembleRelease任务完成后执行uploadApk任务
        tasks.whenTaskAdded { task ->
            if (task.name.startsWith("assemble") && task.name.endsWith("upload")) {
                sleep(2000) // 延迟等待包完全打完
                task.finalizedBy('uploadApk')
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.webkit:webkit:1.3.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}